"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/getTokensBalance";
exports.ids = ["pages/api/getTokensBalance"];
exports.modules = {

/***/ "alchemy-sdk":
/*!******************************!*\
  !*** external "alchemy-sdk" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("alchemy-sdk");

/***/ }),

/***/ "(api)/./pages/api/getTokensBalance.js":
/*!***************************************!*\
  !*** ./pages/api/getTokensBalance.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! alchemy-sdk */ \"alchemy-sdk\");\n/* harmony import */ var alchemy_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const { address , chain  } = JSON.parse(req.body);\n    if (req.method !== \"POST\") {\n        res.status(405).send({\n            message: \"Only POST requests allowed\"\n        });\n        return;\n    }\n    const settings = {\n        apiKey: process.env.ALCHEMY_API_KEY,\n        network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network[chain]\n    };\n    const alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(settings);\n    try {\n        const fetchedTokens = await alchemy.core.getTokenBalances(address);\n        const ethBalance = await alchemy.core.getBalance(address);\n        const parsedEthBalance = parseInt(ethBalance.toString()) / Math.pow(10, 18);\n        console.log(parsedEthBalance);\n        const ethBalanceObject = {\n            name: \"Ethereum\",\n            symbol: \"ETH\",\n            logo: \"https://cryptologos.cc/logos/ethereum-eth-logo.png\",\n            decimals: 18,\n            balance: parsedEthBalance.toPrecision(2),\n            address: \"0x\"\n        };\n        const fetchedTokenBalances = fetchedTokens.tokenBalances.map((token)=>token.tokenBalance);\n        const fetchedTokenAddresses = fetchedTokens.tokenBalances.map((token)=>token.contractAddress);\n        const fetchedTokenMetadata = await Promise.all(fetchedTokenAddresses.map(async (address)=>{\n            const metadata = await alchemy.core.getTokenMetadata(address);\n            return metadata;\n        }));\n        const unifiedBalancedAndMetadata = [\n            ethBalanceObject\n        ];\n        for(let x = 0; x < fetchedTokenMetadata.length - 1; x++){\n            const tokenMetadata = fetchedTokenMetadata[x];\n            const { name , symbol , logo , decimals  } = tokenMetadata;\n            const hexBalance = fetchedTokenBalances[x];\n            const address1 = fetchedTokenAddresses[x];\n            let convertedBalance;\n            if (hexBalance && tokenMetadata.decimals) {\n                convertedBalance = parseInt(hexBalance) / Math.pow(10, decimals);\n                if (convertedBalance > 0) {\n                    const tokenBalanceAndMetadata = {\n                        name,\n                        symbol,\n                        logo,\n                        decimals,\n                        balance: convertedBalance.toPrecision(2),\n                        address: address1\n                    };\n                    unifiedBalancedAndMetadata.push(tokenBalanceAndMetadata);\n                }\n            }\n        }\n        res.status(400).json(unifiedBalancedAndMetadata);\n    } catch (e) {\n        console.warn(e);\n        res.status(500).send({\n            message: \"something went wrong, check the log in your terminal\"\n        });\n    }\n}\nconst settings = {\n    apiKey: process.env.ALCHEMY_API_KEY,\n    network: alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Network.ETH_MAINNET\n};\nconst alchemy = new alchemy_sdk__WEBPACK_IMPORTED_MODULE_0__.Alchemy(settings);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZ2V0VG9rZW5zQmFsYW5jZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFFaEMsZUFBZUUsUUFDNUJDLEdBQUcsRUFBRUMsR0FBRyxFQUNSO0lBQ0EsTUFBTSxFQUFFQyxRQUFPLEVBQUVDLE1BQUssRUFBRSxHQUFHQyxLQUFLQyxLQUFLLENBQUNMLElBQUlNLElBQUk7SUFDOUMsSUFBSU4sSUFBSU8sTUFBTSxLQUFLLFFBQVE7UUFDekJOLElBQUlPLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUE2QjtRQUM3RDtJQUNGLENBQUM7SUFDRCxNQUFNQyxXQUFXO1FBQ2ZDLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtRQUNuQ0MsU0FBU25CLGdEQUFPLENBQUNNLE1BQU07SUFDekI7SUFFQSxNQUFNYyxVQUFVLElBQUluQixnREFBT0EsQ0FBQ2E7SUFDNUIsSUFBSTtRQUNGLE1BQU1PLGdCQUFnQixNQUFNRCxRQUFRRSxJQUFJLENBQUNDLGdCQUFnQixDQUFDbEI7UUFDMUQsTUFBTW1CLGFBQWEsTUFBTUosUUFBUUUsSUFBSSxDQUFDRyxVQUFVLENBQUNwQjtRQUNqRCxNQUFNcUIsbUJBQW1CQyxTQUFTSCxXQUFXSSxRQUFRLE1BQU1DLEtBQUtDLEdBQUcsQ0FBQyxJQUFJO1FBQ3hFQyxRQUFRQyxHQUFHLENBQUNOO1FBQ1osTUFBTU8sbUJBQW1CO1lBQ3ZCQyxNQUFNO1lBQ05DLFFBQVE7WUFDUkMsTUFBTTtZQUNOQyxVQUFVO1lBQ1ZDLFNBQVNaLGlCQUFpQmEsV0FBVyxDQUFDO1lBQ3RDbEMsU0FBUztRQUNYO1FBQ0EsTUFBTW1DLHVCQUF1Qm5CLGNBQWNvQixhQUFhLENBQUNDLEdBQUcsQ0FDMUQsQ0FBQ0MsUUFBVUEsTUFBTUMsWUFBWTtRQUcvQixNQUFNQyx3QkFBd0J4QixjQUFjb0IsYUFBYSxDQUFDQyxHQUFHLENBQzNELENBQUNDLFFBQVVBLE1BQU1HLGVBQWU7UUFHbEMsTUFBTUMsdUJBQXVCLE1BQU1DLFFBQVFDLEdBQUcsQ0FDNUNKLHNCQUFzQkgsR0FBRyxDQUFDLE9BQU9yQyxVQUFZO1lBQzNDLE1BQU02QyxXQUFXLE1BQU05QixRQUFRRSxJQUFJLENBQUM2QixnQkFBZ0IsQ0FBQzlDO1lBQ3JELE9BQU82QztRQUNUO1FBR0YsTUFBTUUsNkJBQTZCO1lBQUNuQjtTQUFpQjtRQUVyRCxJQUFLLElBQUlvQixJQUFJLEdBQUdBLElBQUlOLHFCQUFxQk8sTUFBTSxHQUFHLEdBQUdELElBQUs7WUFDeEQsTUFBTUUsZ0JBQWdCUixvQkFBb0IsQ0FBQ00sRUFBRTtZQUM3QyxNQUFNLEVBQUVuQixLQUFJLEVBQUVDLE9BQU0sRUFBRUMsS0FBSSxFQUFFQyxTQUFRLEVBQUUsR0FBR2tCO1lBQ3pDLE1BQU1DLGFBQWFoQixvQkFBb0IsQ0FBQ2EsRUFBRTtZQUMxQyxNQUFNaEQsV0FBVXdDLHFCQUFxQixDQUFDUSxFQUFFO1lBQ3hDLElBQUlJO1lBRUosSUFBSUQsY0FBY0QsY0FBY2xCLFFBQVEsRUFBRTtnQkFDeENvQixtQkFBbUI5QixTQUFTNkIsY0FBYzNCLEtBQUtDLEdBQUcsQ0FBQyxJQUFJTztnQkFDdkQsSUFBSW9CLG1CQUFtQixHQUFHO29CQUN4QixNQUFNQywwQkFBMEI7d0JBQzlCeEI7d0JBQ0FDO3dCQUNBQzt3QkFDQUM7d0JBQ0FDLFNBQVNtQixpQkFBaUJsQixXQUFXLENBQUM7d0JBQ3RDbEMsU0FBQUE7b0JBQ0Y7b0JBQ0ErQywyQkFBMkJPLElBQUksQ0FBQ0Q7Z0JBQ2xDLENBQUM7WUFDSCxDQUFDO1FBQ0g7UUFFQXRELElBQUlPLE1BQU0sQ0FBQyxLQUFLaUQsSUFBSSxDQUFDUjtJQUN2QixFQUFFLE9BQU9TLEdBQUc7UUFDVjlCLFFBQVErQixJQUFJLENBQUNEO1FBQ2J6RCxJQUFJTyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxTQUFTO1FBQ1g7SUFDRjtBQUNGLENBQUM7QUFFRCxNQUFNQyxXQUFXO0lBQ2ZDLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsZUFBZTtJQUNuQ0MsU0FBU25CLDREQUFtQjtBQUM5QjtBQUVBLE1BQU1vQixVQUFVLElBQUluQixnREFBT0EsQ0FBQ2EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW50LWNsdWIvLi9wYWdlcy9hcGkvZ2V0VG9rZW5zQmFsYW5jZS5qcz9lZTM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5ldHdvcmssIEFsY2hlbXkgfSBmcm9tIFwiYWxjaGVteS1zZGtcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcbiAgcmVxLCByZXNcbikge1xuICBjb25zdCB7IGFkZHJlc3MsIGNoYWluIH0gPSBKU09OLnBhcnNlKHJlcS5ib2R5KTtcbiAgaWYgKHJlcS5tZXRob2QgIT09IFwiUE9TVFwiKSB7XG4gICAgcmVzLnN0YXR1cyg0MDUpLnNlbmQoeyBtZXNzYWdlOiBcIk9ubHkgUE9TVCByZXF1ZXN0cyBhbGxvd2VkXCIgfSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHNldHRpbmdzID0ge1xuICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuQUxDSEVNWV9BUElfS0VZLFxuICAgIG5ldHdvcms6IE5ldHdvcmtbY2hhaW5dLFxuICB9O1xuXG4gIGNvbnN0IGFsY2hlbXkgPSBuZXcgQWxjaGVteShzZXR0aW5ncyk7XG4gIHRyeSB7XG4gICAgY29uc3QgZmV0Y2hlZFRva2VucyA9IGF3YWl0IGFsY2hlbXkuY29yZS5nZXRUb2tlbkJhbGFuY2VzKGFkZHJlc3MpO1xuICAgIGNvbnN0IGV0aEJhbGFuY2UgPSBhd2FpdCBhbGNoZW15LmNvcmUuZ2V0QmFsYW5jZShhZGRyZXNzKTtcbiAgICBjb25zdCBwYXJzZWRFdGhCYWxhbmNlID0gcGFyc2VJbnQoZXRoQmFsYW5jZS50b1N0cmluZygpKSAvIE1hdGgucG93KDEwLCAxOCk7XG4gICAgY29uc29sZS5sb2cocGFyc2VkRXRoQmFsYW5jZSk7XG4gICAgY29uc3QgZXRoQmFsYW5jZU9iamVjdCA9IHtcbiAgICAgIG5hbWU6IFwiRXRoZXJldW1cIixcbiAgICAgIHN5bWJvbDogXCJFVEhcIixcbiAgICAgIGxvZ286IFwiaHR0cHM6Ly9jcnlwdG9sb2dvcy5jYy9sb2dvcy9ldGhlcmV1bS1ldGgtbG9nby5wbmdcIixcbiAgICAgIGRlY2ltYWxzOiAxOCxcbiAgICAgIGJhbGFuY2U6IHBhcnNlZEV0aEJhbGFuY2UudG9QcmVjaXNpb24oMiksXG4gICAgICBhZGRyZXNzOiBcIjB4XCIsXG4gICAgfTtcbiAgICBjb25zdCBmZXRjaGVkVG9rZW5CYWxhbmNlcyA9IGZldGNoZWRUb2tlbnMudG9rZW5CYWxhbmNlcy5tYXAoXG4gICAgICAodG9rZW4pID0+IHRva2VuLnRva2VuQmFsYW5jZVxuICAgICk7XG5cbiAgICBjb25zdCBmZXRjaGVkVG9rZW5BZGRyZXNzZXMgPSBmZXRjaGVkVG9rZW5zLnRva2VuQmFsYW5jZXMubWFwKFxuICAgICAgKHRva2VuKSA9PiB0b2tlbi5jb250cmFjdEFkZHJlc3NcbiAgICApO1xuXG4gICAgY29uc3QgZmV0Y2hlZFRva2VuTWV0YWRhdGEgPSBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgIGZldGNoZWRUb2tlbkFkZHJlc3Nlcy5tYXAoYXN5bmMgKGFkZHJlc3MpID0+IHtcbiAgICAgICAgY29uc3QgbWV0YWRhdGEgPSBhd2FpdCBhbGNoZW15LmNvcmUuZ2V0VG9rZW5NZXRhZGF0YShhZGRyZXNzKTtcbiAgICAgICAgcmV0dXJuIG1ldGFkYXRhO1xuICAgICAgfSlcbiAgICApO1xuICAgIFxuICAgIGNvbnN0IHVuaWZpZWRCYWxhbmNlZEFuZE1ldGFkYXRhID0gW2V0aEJhbGFuY2VPYmplY3RdO1xuXG4gICAgZm9yIChsZXQgeCA9IDA7IHggPCBmZXRjaGVkVG9rZW5NZXRhZGF0YS5sZW5ndGggLSAxOyB4KyspIHtcbiAgICAgIGNvbnN0IHRva2VuTWV0YWRhdGEgPSBmZXRjaGVkVG9rZW5NZXRhZGF0YVt4XTtcbiAgICAgIGNvbnN0IHsgbmFtZSwgc3ltYm9sLCBsb2dvLCBkZWNpbWFscyB9ID0gdG9rZW5NZXRhZGF0YTtcbiAgICAgIGNvbnN0IGhleEJhbGFuY2UgPSBmZXRjaGVkVG9rZW5CYWxhbmNlc1t4XTtcbiAgICAgIGNvbnN0IGFkZHJlc3MgPSBmZXRjaGVkVG9rZW5BZGRyZXNzZXNbeF07XG4gICAgICBsZXQgY29udmVydGVkQmFsYW5jZTtcblxuICAgICAgaWYgKGhleEJhbGFuY2UgJiYgdG9rZW5NZXRhZGF0YS5kZWNpbWFscykge1xuICAgICAgICBjb252ZXJ0ZWRCYWxhbmNlID0gcGFyc2VJbnQoaGV4QmFsYW5jZSkgLyBNYXRoLnBvdygxMCwgZGVjaW1hbHMpO1xuICAgICAgICBpZiAoY29udmVydGVkQmFsYW5jZSA+IDApIHtcbiAgICAgICAgICBjb25zdCB0b2tlbkJhbGFuY2VBbmRNZXRhZGF0YSA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBzeW1ib2wsXG4gICAgICAgICAgICBsb2dvLFxuICAgICAgICAgICAgZGVjaW1hbHMsXG4gICAgICAgICAgICBiYWxhbmNlOiBjb252ZXJ0ZWRCYWxhbmNlLnRvUHJlY2lzaW9uKDIpLFxuICAgICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICB9O1xuICAgICAgICAgIHVuaWZpZWRCYWxhbmNlZEFuZE1ldGFkYXRhLnB1c2godG9rZW5CYWxhbmNlQW5kTWV0YWRhdGEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24odW5pZmllZEJhbGFuY2VkQW5kTWV0YWRhdGEpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS53YXJuKGUpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKHtcbiAgICAgIG1lc3NhZ2U6IFwic29tZXRoaW5nIHdlbnQgd3JvbmcsIGNoZWNrIHRoZSBsb2cgaW4geW91ciB0ZXJtaW5hbFwiLFxuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IHNldHRpbmdzID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52LkFMQ0hFTVlfQVBJX0tFWSxcbiAgbmV0d29yazogTmV0d29yay5FVEhfTUFJTk5FVCxcbn07XG5cbmNvbnN0IGFsY2hlbXkgPSBuZXcgQWxjaGVteShzZXR0aW5ncyk7Il0sIm5hbWVzIjpbIk5ldHdvcmsiLCJBbGNoZW15IiwiaGFuZGxlciIsInJlcSIsInJlcyIsImFkZHJlc3MiLCJjaGFpbiIsIkpTT04iLCJwYXJzZSIsImJvZHkiLCJtZXRob2QiLCJzdGF0dXMiLCJzZW5kIiwibWVzc2FnZSIsInNldHRpbmdzIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIkFMQ0hFTVlfQVBJX0tFWSIsIm5ldHdvcmsiLCJhbGNoZW15IiwiZmV0Y2hlZFRva2VucyIsImNvcmUiLCJnZXRUb2tlbkJhbGFuY2VzIiwiZXRoQmFsYW5jZSIsImdldEJhbGFuY2UiLCJwYXJzZWRFdGhCYWxhbmNlIiwicGFyc2VJbnQiLCJ0b1N0cmluZyIsIk1hdGgiLCJwb3ciLCJjb25zb2xlIiwibG9nIiwiZXRoQmFsYW5jZU9iamVjdCIsIm5hbWUiLCJzeW1ib2wiLCJsb2dvIiwiZGVjaW1hbHMiLCJiYWxhbmNlIiwidG9QcmVjaXNpb24iLCJmZXRjaGVkVG9rZW5CYWxhbmNlcyIsInRva2VuQmFsYW5jZXMiLCJtYXAiLCJ0b2tlbiIsInRva2VuQmFsYW5jZSIsImZldGNoZWRUb2tlbkFkZHJlc3NlcyIsImNvbnRyYWN0QWRkcmVzcyIsImZldGNoZWRUb2tlbk1ldGFkYXRhIiwiUHJvbWlzZSIsImFsbCIsIm1ldGFkYXRhIiwiZ2V0VG9rZW5NZXRhZGF0YSIsInVuaWZpZWRCYWxhbmNlZEFuZE1ldGFkYXRhIiwieCIsImxlbmd0aCIsInRva2VuTWV0YWRhdGEiLCJoZXhCYWxhbmNlIiwiY29udmVydGVkQmFsYW5jZSIsInRva2VuQmFsYW5jZUFuZE1ldGFkYXRhIiwicHVzaCIsImpzb24iLCJlIiwid2FybiIsIkVUSF9NQUlOTkVUIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/getTokensBalance.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/getTokensBalance.js"));
module.exports = __webpack_exports__;

})();